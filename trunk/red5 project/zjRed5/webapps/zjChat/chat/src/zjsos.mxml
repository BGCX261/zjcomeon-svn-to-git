<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:s="library://ns.adobe.com/flex/spark"
				layout="absolute"
				 width="100%" height="100%"
				creationComplete="init()" 				
>
	
	<mx:Script source="sos.as"/>
	<mx:Script>
		<![CDATA[
			import UI_Model.mainUI;
			
			import User_Model.UserModel;
			import User_Model.UserOtherModel;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ResizeEvent;
			
			private var nc:NetConnection;
			
			private var userSO:SharedObject;
			
			private var _mainUI:mainUI;
			
			private var _thisUserName:String;
			//用户模型
			private var _user_model:UserModel;
			//用户模型下标
			private var _user_model_index:int;
			
			private var _user_other_model:UserModel;
			//用户集合(不包含当前用户)
			private var userModelArrayCollection:ArrayCollection=new ArrayCollection();
			
			
			//用户列表集合
			private var usersArrayCollection:ArrayCollection=new ArrayCollection();
			
			//断开连接
			private function disConn():void{
				if(nc!=null){
					nc.close();
					nc=null;
				}
				changeControllBar(3);
				
				//移除用户模型
				removeUserModel();
			}
			
			private function onConn():void{
				changeControllBar(2);
				
				nc=new NetConnection();
				nc.addEventListener(NetStatusEvent.NET_STATUS,netStatus);
				nc.connect("rtmp://localhost/zjChat",userName.text,200,200);
				
				nc.client=this;	
				
				_thisUserName=userName.text;
				
			}
			
			private function netStatus(e:NetStatusEvent):void{
				
				switch(e.info.code){
					//地址错误
					case "NetConnection.Connect.Failed":
						Alert.show("Failed");
					break;
					
					//连接成功
					case "NetConnection.Connect.Success":

						
						
						//按钮区切换
						changeControllBar(1);
						
						
						
						//加入房间
						joinRoom();
						
						
						
						/* userSO = SharedObject.getRemote("userSharedObj", nc.uri, false);
						userSO.connect(nc);
						userSO.addEventListener(SyncEvent.SYNC, _ballSOSyncHandler);
						userSO.client=this; */
						
						
						//建立模型,创建共享对象
						addUserModel();
						
						

					break;
					
					//关闭
					case "NetConnection.Connect.Closed":
						Alert.show("close");
					break;
					
					//拒绝
					case "NetConnection.Connect.Rejected":
						Alert.show("Rejected");
					break;
					
				}
			}
			
			private function result(e:Object):void{
				Alert.show(e.toString());
			}
			
			
			
			
			
			//加入房间
			private function joinRoom():void{
				var res:Responder=new Responder(result);
				nc.call("clientLogin",res);
			}
			
			//客户列表更新
			public function sendAllClientList(re:Object):void{
				usersArrayCollection.source=re as Array;
				
				
				for(var i:int=0;i<usersArrayCollection.length;i++){
					var user:Object=usersArrayCollection.getItemAt(i);
					//trace(user.userName,user.x,user.y)
					if(user.userName==_thisUserName){
						
						//trace(userModelArrayCollection.getItemAt(i))
						
					}else{
						//添加其他用户模型
						addUserOtherModel(user);
					} 

				}
				
			}
			
			//更新用户坐标
			public function updateUserModelXY(re:Object):void{
				
				usersArrayCollection.source=re as Array;
			
				
				for(var i:int=0;i<usersArrayCollection.length;i++){
					var user:Object=usersArrayCollection.getItemAt(i);
					trace(user.userName,user.x,user.y)
					
					var m:UserModel=_mainUI.getChildByName(user.userName) as UserModel;
					
					m.x=user.x;
					m.y=user.y;
				}
			}
			
			//删除离开用户模型
			public function removeClientModel(re:Object):void{
				trace("用户离开，移除",re.toString())
				
				var m:UserModel=_mainUI.getChildByName(re.toString()) as UserModel;
				_mainUI.removeChild(m);
			}
			
			private function _ballSOSyncHandler(e:SyncEvent):void{

				 	
     				//trace(userSO.data.x)
					
					//TweenMax.to(_user_model,2,{x:userSO.data.x,y:userSO.data.y});
					
					//_user_model.x=userSO.data.x;
					//_user_model.y=userSO.data.y;
    				

			
			}
			
			private function init():void{
				//建立场景
				createStage();
				
			}
			private function createStage():void{
				_mainUI=new mainUI(this.width,this.height);
				mainPanel.addElement(_mainUI);
				//mainPanel.setChildIndex(userList,this.numChildren-1);  
				
				mainPanel.addEventListener(ResizeEvent.RESIZE,resizeStageSize);
				
			}
			
			private function resizeStageSize(e:ResizeEvent):void{
				
				_mainUI.changeStageSize(e.currentTarget.width,e.currentTarget.height);
			}
			private function userListStartDrag(e:MouseEvent):void{
				//userList.startDrag();
				//userList.addEventListener(MouseEvent.MOUSE_UP,userListStopDrag);
			}
			private function userListStopDrag(e:MouseEvent):void{
				//userList.stopDrag();
				//userList.removeEventListener(MouseEvent.MOUSE_UP,userListStopDrag);
				
				//var xy={x:tw.x,y:tw.y}
				
				//nc.call("setballxy", null, tw.x,tw.y);
			}
			
			
			private function sendMessage():void{
				//nc.call("sendMessage",null,this.userMessage.text);
				
				_user_model.setNewMessage(userMessage.text);
				
				
				this.userMessage.text="";	
			}
			
			public function sendAllClientMsg():void{
				
			}
		]]>
	</mx:Script>
	
	
	
	
	
	
	<s:Panel id="mainPanel" width="100%" height="100%">
		
		
		<s:controlBarContent>
			<mx:TextInput id="userMessage" enabled="false"/>
			<s:Button id="sendMsgBtn" label="发送" click="sendMessage()" enabled="false"/>
		</s:controlBarContent>
	</s:Panel>
	
	<s:TitleWindow id="userList" title="用户列表" width="200" height="200"  enabled="true" x="0" y="0" alpha="0.6">
		<s:controlBarLayout>
			<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"/>
		</s:controlBarLayout>
		<s:controlBarContent>
			<mx:ProgressBar id="loadBar" mode="event" indeterminate="true" labelPlacement="center" width="100" height="20" 
							label="loading..."
							horizontalCenter="0" verticalCenter="0" includeInLayout="false" visible="false"
							/>
			<s:TextInput id="userName" width="100"/>
			<s:Button id="onconnBtn" label="登录" click="onConn()"/>
			<s:Button id="disconnBtn" label="退出" click="disConn()" includeInLayout="false"/>
		</s:controlBarContent>
		<s:mxmlContentFactory>
			<s:List id="clientList" width="100%" height="100%"  dataProvider="{usersArrayCollection}" labelField="userName"/>
		</s:mxmlContentFactory>
	</s:TitleWindow>
	<!--<mx:TitleWindow title="sos" id="tw">
		
	</mx:TitleWindow>-->
</mx:Application>
